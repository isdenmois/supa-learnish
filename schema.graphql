directive @embedded on OBJECT

directive @collection(name: String!) on OBJECT

directive @index(name: String!) on FIELD_DEFINITION

directive @resolver(name: String, paginated: Boolean! = false) on FIELD_DEFINITION

directive @relation(name: String) on FIELD_DEFINITION

directive @unique(index: String) on FIELD_DEFINITION

scalar Date

# 'Lesson' input values
input LessonInput {
  weekday: Int!
  type: LessonType!
  duration: Int!
  link: String
  description: String
}

type Mutation {
  # Create a new document in the collection of 'Lesson'
  createLesson(
    # 'Lesson' input values
    data: LessonInput!
  ): Lesson!

  # Update an existing document in the collection of 'Lesson'
  updateLesson(
    # The 'Lesson' document's ID
    id: ID!

    # 'Lesson' input values
    data: LessonInput!
  ): Lesson

  # Delete an existing document in the collection of 'Lesson'
  deleteLesson(
    # The 'Lesson' document's ID
    id: ID!
  ): Lesson
}

scalar Time

type Lesson {
  duration: Int!
  description: String

  # The document's ID.
  _id: ID!
  link: String
  weekday: Int!
  type: LessonType!

  # The document's timestamp.
  _ts: Long!
}

# The pagination object for elements of type 'Lesson'.
type LessonPage {
  # The elements of type 'Lesson' in this page.
  data: [Lesson!]!

  # A cursor for elements coming after the current page.
  after: String

  # A cursor for elements coming before the current page.
  before: String
}

enum LessonType {
  Link
  YouTube
  PDF
  Plain
}

type Query {
  # Find a document from the collection of 'Lesson' by its id.
  findLessonByID(
    # The 'Lesson' document's ID
    id: ID!
  ): Lesson
  lessons(
    # The number of items to return per page.
    _size: Int

    # The pagination cursor.
    _cursor: String
  ): LessonPage!
}

# The `Long` scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1.
scalar Long
